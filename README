== 1. Setup the app

# create the app
rails ~/tmp/austinonrails
cd ~/tmp/austinonrails
# create a simple controller so that we can test hitting the Rails stack
rails g controller Welcome index
# 
mate .

# ./config/routes.rb: uncomment the root route (so we don't have to specify a path when testing)
root :to => "welcome#index"
# nuke the index file
rm ./public/index.html

# ./config.ru: at the top of the file, set our custom gem paths:
if (ENV['RACK_ENV']) == 'production'
  ENV['GEM_HOME'] = "#{ENV['HOME']}/.gems"
  ENV['GEM_PATH'] = "#{ENV['HOME']}/.gems:/usr/lib/ruby/gems/1.8"
  require 'rubygems'
  Gem.clear_paths
end

# ./Gemfile: uncomment the line requiring capistrano
gem 'capistrano'

# install our gems and package them for deployment
bundle install
bundle package

# test that it's working
rails server
open http://localhost:3000/


# setup your github key (if needed)
cat ~/.ssh/id_rsa.pub | pbcopy
open https://github.com/account
# create the repo
open http://github.com/repositories/new
# import the app
git init
git add .
git commit -m "initial import"
git push origin git@github.com:twelvelabs/austinonrails.git



== 2. Setup the domain

# create app user (shell access)
open https://panel.dreamhost.com/index.cgi?tab=users&subtab=users&current_step=Index&next_step=Add

# create app subdomain
open https://panel.dreamhost.com/index.cgi?tree=domain.manage&current_step=Index&next_step=ShowAddhttp&domain=
# domain: austinonrails.twelvelabs.com
# docroot: austinonrails.twelvelabs.com/current/public
# don't forget to turn on Passenger!



== 3. Setup the machine

# transfer your public key over the server
./script/setup/install_public_key.sh

# test that it's working (shouldn't have to enter a password)
ssh austinonrails@twelvelabs.com


# dreamhost auto created the docroot for us, but Capistrano will crap out if it's there...
rm -R austinonrails.twelvelabs.com/current

# lets check the versions of ruby and ruby gems
# ruby needs to be >= 1.8.7... file support ticket to move to newer server if it's not
# rubygems needs to be >= 1.3.6... it most likely isn't so you'll need to install it in your home dir
ruby -v 
gem -v

# typing is lame! (note: you need to copy these over to the server before running them)
./setup_gem_paths.sh
./install_rubygems.sh

# make sure everything is pointing to our custom version of rubygems and update to 1.3.6
which gem
gem update --system

# install bundler for bootstrapping
gem install bundler



== 4. Setup capistrano

cd ~/tmp/austinonrails
capify .
# deploy script simply references Dreamhost/Github settings and runs bundle install on deploy
cp -f ./config/deploy.rb.example ./config/deploy.rb

# ship it!
cap deploy:setup
cap deploy:migrations

# if the server is experiencing high load, they may kill your setup during bundle install
# only thing you can do is keep running deploy:setup until it completes
# subsequent deploys seem to run fine



== 5. Further reading

# using bundler
http://gembundler.com/
# general dreamhost rails/gems info
http://wiki.dreamhost.com/Rails
http://wiki.dreamhost.com/RubyGems
# getting passenger to recognize a custom gem path
http://blog.phusion.nl/2008/12/16/passing-environment-variables-to-ruby-from-phusion-passenger/
# setting up public keys
http://sial.org/howto/openssh/publickey-auth/
# capistrano info
http://www.capify.org/index.php/Documentation
# using git and capistrano together
http://github.com/guides/git-cheat-sheet
http://github.com/guides/deploying-with-capistrano



